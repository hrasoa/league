daemon off;
worker_processes 4;
load_module modules/ngx_http_image_filter_module.so;

events {
    worker_connections 1024;
}

http {
    upstream node-app {
        server host.docker.internal:3000;
    }

    server {
        listen 80;
        server_name $hostname;

        location ~* \.(css|js)$ {
            gzip_static on;
            gzip_http_version 1.0;
            gzip_disable "MSIE [1-6].";
            gzip_vary on;
            gzip_comp_level 9;
            gzip_proxied any;
            gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
            include /etc/nginx/mime.types;
            root /usr/share/nginx/html/;
        }

        location ~* \.(ttf|ttc|otf|eot|woff|woff2|gif|ico|gz|map|json)$ {
            include /etc/nginx/mime.types;
            root /usr/share/nginx/html/;
        }

        location ~* \.(jpeg|jpg|png)$ {
            proxy_pass        http://127.0.0.1:9001;
            # root /usr/share/nginx/html/;
            # proxy_cache       resized;
            # proxy_cache_valid 180m;
        }

        location / {
            gzip on;
            gzip_types text/plain application/xml;
            proxy_pass http://node-app;
        }
    }

    server {
        listen 9001;
        allow 127.0.0.1;
        deny all;
        # limit_req zone=2persec burst=10;

        root /usr/share/nginx/html/;

        ## RESIZE
        location ~* \.(jpeg|jpg|png)$ {
            set $w "-";
            set $h "-";
            set $q "85";

            if ( $arg_w ) {
                set $w $arg_w;
            }
            if ( $arg_h ) {
                set $h $arg_h;
            }
            if ( $arg_q ) {
                set $q $arg_q;
            }

            image_filter                resize $w $h;
            image_filter_jpeg_quality   $q;
            image_filter_buffer         10M;
            image_filter_interlace      on;
        }
    }
}